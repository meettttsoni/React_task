===== File: Controlled Todo.jsx =====


import React, { useEffect, useState } from 'react'

export default function Todoprac() {
  const sort=JSON.parse(localStorage.getItem('user')) || []
  const[data,setdata]=useState({name:'',age:''})
  const[list,setlist]=useState(sort)
  const[edit,setedit]=useState(null)

  useEffect(()=>{
    localStorage.setItem('user',JSON.stringify(list))
  },[list])
  function handle(e){
    setdata({...data,[e.target.name]:e.target.value})
  }
  function add(){
    if(edit!==null){
      const u=[...list]
      u[edit]=data;
      setlist(u)
      setedit(null)
    }else{
      setlist([...list,data])
    }
   
    setdata({name:'',age:''})
  }
  function del(index){
    const u=[...list]
    u.splice(index,1)
    setlist(u)
  }
  function edi(index){
    setdata(list[index])
    setedit(index)
  }
  return (
    <div>
        <input type="text" placeholder='name' name='name' onChange={handle} value={data.name} />
        <input type="text" placeholder='age' name='age' onChange={handle} value={data.age} />
        <button onClick={add}>submit</button>
        <ul>
          {list.map((li,index)=>(
              <li>
                  {li.name} {li.age}
                  <button onClick={()=>del(index)}>delete</button>
                  <button onClick={()=>edi(index)}>edit</button>
              </li>
          ))}
        </ul>
    </div>
  )
}


===== File: Uncontrolled Todo.jsx =====


import React, { useRef, useState } from 'react';

export default function Todoref() {
  const nameref = useRef(null);
  const emailref = useRef(null);

  const [data, setData] = useState([]);
  const [editIndex, setEditIndex] = useState(null);

  function handleSubmit(e) {
    e.preventDefault();

    const name = nameref.current.value;
    const email = emailref.current.value;

    if (name === '' || email === '') {
      alert('Please fill both fields');
      return;
    }

    let updatedData = [...data];

    if (editIndex !== null) {
      updatedData[editIndex] = { name, email };
      setEditIndex(null);
    } else {
      updatedData.push({ name, email });
    }

    setData(updatedData);

    nameref.current.value = '';
    emailref.current.value = '';
  }

  function handleDelete(index) {
    const updated = [...data];
    updated.splice(index, 1);
    setData(updated);
  }

  function handleEdit(index) {
    const item = data[index];
    nameref.current.value = item.name;
    emailref.current.value = item.email;
    setEditIndex(index);
  }

  return (
    <div>
  
      <form onSubmit={handleSubmit}>
        <div>
          Name: <input type="text" ref={nameref} />
        </div>
        <div>
          Email: <input type="text" ref={emailref} />
        </div>
        <button type="submit">{editIndex !== null ? 'Update' : 'Add'}</button>
      </form>

      <ul>
        {data.map((item, index) => (
          <li key={index}>
            Name: {item.name} | Email: {item.email}
            
            <button onClick={() => handleEdit(index)}>Edit</button>
            &nbsp;
            <button onClick={() => handleDelete(index)}>Delete</button>
          </li>
        ))}
      </ul>
    </div>
  );
}
